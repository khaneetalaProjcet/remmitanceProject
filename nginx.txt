

    # Redirect all HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name asugold.com www.asugold.com admin.asugold.com;
    return 301 https://$host$request_uri;
}

# Site: asugold.com
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name asugold.com www.asugold.com;
    ssl_certificate     /etc/nginx/ssl/asugold.com-cert.pem;
    ssl_certificate_key /etc/nginx/ssl/asugold.com-key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    root /home/site/admin/build;
    index index.html;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' ws: wss:" always;

    location / {
        try_files $uri /index.html;
    }
}

# Admin Panel: admin.asugold.com
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name admin.asugold.com;

    ssl_certificate     /etc/nginx/ssl/admin.asugold.com-cert.pem;
    ssl_certificate_key /etc/nginx/ssl/admin.asugold.com-key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    root /home/panel/admin/build;
    index index.html;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self' ws: wss:" always;

    # React admin panel
    location / {
        try_files $uri /index.html;
    }

    # Node.js API
    location /api/ {
        proxy_pass http://localhost:7000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
}